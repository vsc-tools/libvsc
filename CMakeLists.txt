
cmake_minimum_required(VERSION 3.10)

project(libvsc)

include (ExternalProject)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

if (NOT PACKAGES_DIR)
  set(PACKAGES_DIR ${CMAKE_SOURCE_DIR}/packages)

  # Testing is only enabled when libvsc-dm is the top-level project
  set(ENABLE_TESTING 1)
endif()

if (WIN32)
  set(PYTHON ${PACKAGES_DIR}/python/Scripts/python.exe)
else()
  set(PYTHON ${PACKAGES_DIR}/python/bin/python)
endif()

execute_process(COMMAND ${PYTHON} -m ivpm share cmake OUTPUT_VARIABLE IVPM_CMAKE_PATH)
list(APPEND CMAKE_MODULE_PATH ${IVPM_CMAKE_PATH})
message("IVPM_CMAKE_PATH: ${IVPM_CMAKE_PATH} ${CMAKE_MODULE_PATH}")

include(ivpm)

Ivpm_AddPythonExtProject(debug-mgr debug_mgr)

# set(DEBUG_MGR_DIR ${PACKAGES_DIR}/debug-mgr)

# ExternalProject_Add(DebugMgr
#   PREFIX debug-mgr
#   SOURCE_DIR ${DEBUG_MGR_DIR}
#   CMAKE_CACHE_ARGS
#     -DCMAKE_INTERPROCEDURAL_OPTIMIZATION:BOOL=${CMAKE_INTERPROCEDURAL_OPTIMIZATION}
#     -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=${CMAKE_POSITION_INDEPENDENT_CODE}
#     -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
#     -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
#     -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
#     -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
#     -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}
#     -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}
#     -DCMAKE_BUILD_TYPE:STRING=Release
#     -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
#     -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
#   )

if(NOT WIN32)
  add_compile_options(-fPIC)
endif()

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_INSTALL_RPATH $ORIGIN)



#set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_FLAGS_DEBUG "-O0 -g")

add_subdirectory(src)

if (ENABLE_TESTING)
  enable_testing()
  add_subdirectory(test)
endif()

